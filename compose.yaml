services:
  # server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       - PORT=${API_PORT}
  #   environment:
  #     NODE_ENV: development
  #   ports:
  #     - ${API_PORT}:${API_PORT}
  #   volumes:
  #     - ./src:/usr/src/app/src
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - default
  db:
    image: postgres:17.0
    restart: always
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - default
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "test@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "testpswd"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - D:/:/tmp/backup
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - default
networks:
  default:
    driver: bridge
volumes:
  db_data:
  pgadmin-data: